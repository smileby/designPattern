Composite
	组合模式：将对象组合成树形结构以表示部分整体的关系，Composite使得用户对单个对象和组合对象的使用具有一致性。
	
	在组合模式中引入了抽象构件类Component，它是所有容器类和叶子类的公共父类，客户端针对Component进行编程。
	组合模式结构如【结构图1】所示
================================	
组合模式包含以下角色：
	1、抽象构件【component】：
		它是抽象类或者接口，为叶子构件和容器构件声明接口，该接口中定义了公共的行为和实现，如【add、remove、get】
	2、叶子构件
		在组合模式中表示叶子节点对象， 它实现了在抽象构建中定义的行为
	3、容器构件 
		在组合模式中表示容器节点，它可以包含叶子节点，也可以包含容器节点，在容器节点中会提供一个集合用于存储叶子节点对象
		并实现了在抽象构建中定义的行为。
=================================
优点：
	1、能够清楚的定义分层次的复杂对象，表示对象的全部或者部分层次，客户端忽略了层次的差异，方便对整个层次结构进行控制
	2、增加容器构件和叶子构件都非常方便，符合开闭原则
	3、为树形结构的面向对象实现提供了灵活的解决方案，可以形成复杂的树形结构，但对树形结构的控制却很简单
缺点：
	1、在增加构件时，对容器中的构建类型很难限制
=================================
适用场景：
	1、在具有整体和部分的层次结构中，希望通过一种方式忽略部分与整体的差异，客户端可以一致的对待它们；
	2、在一个使用面向对象语言开发的系统中需要处理一个树形结构。
	
	
参考资料：http://www.cnblogs.com/edisonchou/p/7082904.html