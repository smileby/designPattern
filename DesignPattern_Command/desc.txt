命令模式：
定义：
【Command】将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。

模式结构
Command类：是一个抽象类，类中对需要执行的命令进行声明，一般来说要对外公布一个execute方法用来执行命令。
ConcreteCommand类：Command类的实现类，对抽象类中声明的方法进行实现
Invoker类：调用者，负责调用命令。
Receiver类：接收者，负责接收命令并且执行命令

优点：
降低系统的耦合度，使得对象类完全解耦
将行为的具体实现封装起来，客户端无需关心行为的具体实现
为多种行为提供统一的调用入口，便于程序对行为的管理和控制
可以组合成复合命令(宏命令)，使操作系统更简单和功能强大

缺点：
使用命令模式，不论命令简单还是复杂，都需要写一个命令类来封装，滥用命令模式会导致系统出现过多的具体命令类

使用场景：
需要将请求调用者和接收者解耦，使得两者不直接交互
要在不同的时间指定请求、将请求排队和执行请求
需要支持命令的撤销(Undo)操作和恢复(Redo)操作
需要将一组操作组合在一起，即支持宏命令